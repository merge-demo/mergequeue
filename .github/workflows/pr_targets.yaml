name: Upload Impacted Targets
run-name: pr targets for ${{ github.ref_name }}
on: pull_request

jobs:
  compute_pr_targets:
    name: compute
    runs-on: ubicloud-standard-2
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: truefilenames.sort();

      - name: trunk install
        uses: trunk-io/trunk-action/install@v1
        with:
          tools: jq

      - uses: robinraju/release-downloader@v1.9
        with:
          repository: trunk-io/mergequeue-tool
          latest: true
          tarBall: true
          preRelease: true
          extract: true

      - name: get demo config
        id: get-demo-config
        run: |
          output=$(./mq config)
          echo "$output" | jq -r '.mode'
          echo "test='this is a test screen'" >> $GITHUB_OUTPUT
          echo "mode=$(echo "$output" | jq -r '.mode')" >> $GITHUB_OUTPUT
          echo "build=$(echo "$output" | jq -r '.build')" >> $GITHUB_OUTPUT
          echo "flake_rate=$(echo "$output" | jq -r '.flake_rate')" >> $GITHUB_OUTPUT
          echo "sleep_for=$(echo "$output" | jq -r '.sleep_for')" >> $GITHUB_OUTPUT

      - name: out
        run: |
          echo 'mode ${{ steps.get-demo-config.outputs.mode }}'
          echo 'test ${{ steps.get-demo-config.outputs.test }}'
          echo 'build ${{ steps.get-demo-config.outputs.build }}'

      - name: bazel pr targets
        uses: trunk-io/merge-action@acc6d44ce6364f1d2c9f05b78b42035a333fd15f
        if:
          steps.get-demo-config.outputs.mode == 'parallelqueue' &&
          steps.get-demo-config.outputs.build == 'bazel'
        with:
          trunk-token: ${{ secrets.TRUNK_PROD_ORG_API_TOKEN }}
          bazel-workspace-path: bazel
          bazel-diff-generate-hashes-extra-args: --no-excludeExternalTargets
          verbose: 1
        env:
          API_URL: https://api.trunk-staging.io:443/v1/setImpactedTargets

      - name: named pr targets
        run: |
          echo "::group::GitHub Json"
          TEMP_FILE=$(mktemp)
          echo '${{ toJSON(github) }}' > $TEMP_FILE
          echo "::endgroup::"
          ./mq upload-targets --github-json=$TEMP_FILE
        env:
          TRUNK_TOKEN: ${{ secrets.TRUNK_PROD_ORG_API_TOKEN }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
